# frozen_string_literal: true

require "rails_helper"

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/api/v1/parking_slots" do
  # before do
  #   Entrance.create!(name: "A")
  #   Entrance.create!(name: "B")
  #   Entrance.create!(name: "C")
  # end

  let(:valid_attributes) { { slot_type: 0, distances: "1,2,3" } }

  describe "GET /index" do
    it "renders a successful response" do
      parking_lot = ParkingLot.new(name: "PL1")
      parking_lot.parking_slots.build(valid_attributes)
      parking_lot.save!
      get api_v1_parking_slots_url
      expect(response).to have_http_status(:success)
      parking_slots = response.parsed_body
      expect(parking_slots.size).to eq(1)
    end
  end
end
